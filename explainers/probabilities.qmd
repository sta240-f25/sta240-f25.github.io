---
title: "Computing probabilities"
format: html
---

`R` provides basic commands that compute probabilities for our special families of distributions:

- [Binomial](https://sta240-f25.github.io/distributions/discrete-binomial.html);
- [Geometric](https://sta240-f25.github.io/distributions/discrete-geometric.html);
- [Poisson](https://sta240-f25.github.io/distributions/discrete-poisson.html);
- (we will add more as the semester wears on)

Each family has its own commands, but the pattern is the same.

## Evaluating the PMF

To evaluate the PMF $P(X=x)$, you use a `d-` command:

```{r}
#| eval: false
dbinom(x, size, prob)
dgeom(x, prob)
dpois(x, lambda)
```

For example:

```{r}
# P(X = 0)
dbinom(0, 5, 0.5)       

# P(X = 1)
dbinom(1, 5, 0.5)

# P(X = 0 or X = 1)
dbinom(c(0, 1), 5, 0.5)

# Add up every probability
sum(dbinom(0:5, 5, 0.2))

# P(0 <= Z <- 6)
dpois(0:6, 5)
```


Notice that these `d-` commands are [*vectorized*](https://sta240-f25.github.io/explainers/vectorization.html).

## Evaluating the CDF

To evaluate the CDF $F(q) = P(X\leq q)$, you use a `p-` command:

```{r}
#| eval: false
pbinom(q, size, prob)
pgeom(q, prob)
ppois(q, lambda)
```

Notice right away that the `p-` commands and `d-` commands are consistent with one another:

```{r}
# P(X <= 2)
pbinom(2, 5, 0.3)

# P(X = 0) + P(X = 1) + P(X = 2)
sum(dbinom(0:2, 5, 0.3))
```
